apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "music-stack.fullname" . }}-postgres
  labels:
    {{- include "music-stack.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "music-stack.fullname" . }}-postgres
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "music-stack.name" . }}-postgres
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "music-stack.name" . }}-postgres
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.postgres.image }}:{{ .Values.postgres.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ .Values.postgres.port }}
              name: pg
          envFrom:
            - secretRef:
                name: {{ include "music-stack.fullname" . }}-db
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          resources:
            {{- toYaml .Values.resources.postgres | nindent 12 }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        {{- if .Values.media.storageClassName }}
        storageClassName: {{ .Values.media.storageClassName | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.postgres.storage }}
